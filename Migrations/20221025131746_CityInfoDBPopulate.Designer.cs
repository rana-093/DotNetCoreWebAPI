// <auto-generated />
using System;
using DotNetCoreWebAPI.DbContexts;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace DotNetCoreWebAPI.Migrations
{
    [DbContext(typeof(CityContext))]
    [Migration("20221025131746_CityInfoDBPopulate")]
    partial class CityInfoDBPopulate
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.10")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("DotNetCoreWebAPI.entities.City", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("description")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.HasKey("Id");

                    b.ToTable("cities");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "Dhaka",
                            description = "Oldest city in BD"
                        },
                        new
                        {
                            Id = 2,
                            Name = "Ctg",
                            description = "Port City"
                        },
                        new
                        {
                            Id = 3,
                            Name = "Sylhet",
                            description = "Peaceful city ever"
                        });
                });

            modelBuilder.Entity("DotNetCoreWebAPI.entities.PointOfInterest", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int?>("cityId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("cityId");

                    b.ToTable("pointsOfInterests");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "Khilkhet",
                            cityId = 1
                        },
                        new
                        {
                            Id = 2,
                            Name = "Uttara",
                            cityId = 1
                        },
                        new
                        {
                            Id = 3,
                            Name = "Halisohor",
                            cityId = 2
                        },
                        new
                        {
                            Id = 4,
                            Name = "Hobigonj",
                            cityId = 3
                        });
                });

            modelBuilder.Entity("DotNetCoreWebAPI.entities.PointOfInterest", b =>
                {
                    b.HasOne("DotNetCoreWebAPI.entities.City", "city")
                        .WithMany("PointOfInterests")
                        .HasForeignKey("cityId");

                    b.Navigation("city");
                });

            modelBuilder.Entity("DotNetCoreWebAPI.entities.City", b =>
                {
                    b.Navigation("PointOfInterests");
                });
#pragma warning restore 612, 618
        }
    }
}
